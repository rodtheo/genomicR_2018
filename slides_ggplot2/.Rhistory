geom_point() +
geom_smooth(mapping = aes(group = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(mapping = aes(colour = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv)) +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv)) +
geom_smooth(mapping = aes(linetype = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv), fill = "white", stroke = 5)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(mapping = aes(group = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(mapping = aes(colour = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv)) +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv)) +
geom_smooth(mapping = aes(linetype = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(fill = drv), colour = "white", stroke = 5)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(mapping = aes(group = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(mapping = aes(colour = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv)) +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv)) +
geom_smooth(mapping = aes(linetype = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv), fill = "white", stroke = 5, shape = 21)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(mapping = aes(group = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(mapping = aes(colour = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv)) +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv)) +
geom_smooth(mapping = aes(linetype = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(fill = drv), colour = "white", stroke = 3, shape = 21)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(mapping = aes(group = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(mapping = aes(colour = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv)) +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv)) +
geom_smooth(mapping = aes(linetype = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(fill = drv), colour = "white", stroke = 2, shape = 21)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(mapping = aes(group = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(mapping = aes(colour = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv)) +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = drv)) +
geom_smooth(mapping = aes(linetype = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(fill = drv), colour = "white", stroke = 2, shape = 21, size = 5)
?geom_bar()
?tribble
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_bar(mapping = aes(x = cut, y = freq), stat = "identity")
demo
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = count, group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = count))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..count.., group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
?stat_summary()
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = cut, y = depth))
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = cut, y = depth), fun.ymin = min, fun.ymax = max, fun.y = median)
ggplot(data = diamonds) +
geom_freqpoly(mapping = aes(x = cut, y = depth), fun.ymin = min, fun.ymax = max, fun.y = median)
ggplot(data = diamonds) +
geom_pointrange(mapping = aes(x = cut, y = depth), fun.ymin = min, fun.ymax = max, fun.y = median)
ggplot(data = diamonds) +
geom_pointrange(mapping = aes(x = cut, y = depth, ymin = min(depth), ymax = max(depth)))
ggplot(data = diamonds) +
geom_pointrange(mapping = aes(x = cut, y = median, ymin = min, ymax = max))
ggplot(data = diamonds) +
geom_pointrange(mapping = aes(x = cut, group = depth, y = median, ymin = min, ymax = max))
ggplot(data = diamonds) +
geom_pointrange(mapping = aes(x = cut, y = depth, ymin = min, ymax = max))
ggplot(data = diamonds) +
geom_pointrange(mapping = aes(x = cut, y = depth))
?geom_pointrange
ggplot(data = diamonds) +
geom_pointrange(mapping = aes(x = depth, group = cut, ymin = min, ymax = max))
diamongs
diamonds
diamongs %>% group_by(cut) %>% summarise(mdepth = median(depth), ymin = min(depth), ymax = max(depth))
diamonds %>% group_by(cut) %>% summarise(mdepth = median(depth), ymin = min(depth), ymax = max(depth))
demo <- diamonds %>% group_by(cut) %>% summarise(mdepth = median(depth), ymin = min(depth), ymax = max(depth))
ggplot(data = demo) +
geom_pointrange(mapping = aes(x = cut, y = mdepth, ymin = ymin, ymax = ymax))
?geom_col()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_col(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_col(mapping = aes(x = cut, y = depth))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_col(mapping = aes(x = cut, y = freq))
?stat_smooth()
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, colour = clarity)) +
geom_bar(fill = NA, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, colour = clarity)) +
geom_bar(fill = NA, position = "identity")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), position = "jitter")
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point(position = "jitter")
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point()
head(mpg)
?geom_jitter
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point(position = "jitter")
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_jitter(width = 0.25)
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_jitter(width = 0.4)
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_jitter(width = 0.25, height = 0.25)
?geom_count
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_count()
?geom_boxplot
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
head(mpg)
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = drv, y = cty))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = drv, y = cty, group = hwy))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = drv, y = hwy))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = hwy, y = cty, group = drv))
head(mpg)
levels(mpg$trans)
mpg$trans
unique(mpg$trans)
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = drv, y = cty, group = trans))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = drv, y = cty, fill = trans))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = hwy, y = cty, fill = drv))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = hwy, y = cty, fill = trans))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = drv, y = cty, fill = trans))
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar + coord_polar()
?labs()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1)
bar + coord_flip()
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL, caption = "(based on data from HW)")
bar + coord_flip()
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL, title = "Boxcomb Chart", caption = "(based on data from HW)")
bar + coord_flip()
bar + coord_polar()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
?coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline()
?coord_fixed
?geom_abline
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline()
?mpg
?rand
n = 10
set.seed(123)
amostra1 <- rnorm(n, mean = 0, sd = 1)
amostra2 <- rnorm(n, mean = 1, sd = 1)
t.test(amostra1, amostra2)
?t.test
sd(amostra1)
sd(amostra2)
sample(1:10, 2)
N = 10
set.seed(123)
population <- sample(1:30, 10000, replace=True)
N = 10
set.seed(123)
population <- sample(1:30, 10000, replace=TRUE)
ggplot(population) +
geom_bar(mapping = aes(population))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
diamonts$cit
diamonts$cut
diamonds$cut
ggplot(data = population) + geom_bar(mapping = aes(x = population))
ggplot(data = population) + geom_density(mapping = aes(x = population))
ggplot(data = population) + geom_histogram(mapping = aes(x = population))
N = 10
set.seed(123)
population <- sample(1:30, 10000, replace=TRUE)
ggplot(data = population) +
geom_histogram(mapping = aes(population))
N = 10
set.seed(123)
population <- sample(1:30, 10000, replace=TRUE)
pop_tibble <- as_tibble(population)
ggplot(data = pop_tibble) +
geom_histogram(mapping = aes(x = population))
N = 10
set.seed(123)
population <- sample(1:30, 100, replace=TRUE)
pop_tibble <- as_tibble(population)
ggplot(data = pop_tibble) +
geom_histogram(mapping = aes(x = population))
N = 10
set.seed(123)
population <- sample(1:30, 150, replace=TRUE)
pop_tibble <- as_tibble(population)
ggplot(data = pop_tibble) +
geom_histogram(mapping = aes(x = population))
?permutations
??permutations
perms <- permute(mtcars,  1000, mpg)
library(tidyverse)
perms <- permute(mtcars,  1000, mpg)
library(purrr)
perms <- permute(mtcars,  1000, mpg)
perms <- modelr::permute(mtcars,  1000, mpg)
perms
mtcars
mpg
perms$perm
?sample
library(combinat)
install.packages(combinat)
install.packages("combinat")
library(combinat)
amostra1
permn(amostra1)
?permn
combn(amostra1, 5)
combn(amostra1, 5, FUN = mean)
dim(combn(amostra1, 5, FUN = mean))
dim(combn(amostra1, 5))
dim(combn(amostra1, 5, FUN = mean())
)
dim(combn(amostra1, 5, function(x) mean(x))
)
dim(combn(amostra1, 5, function(x) mean(x)))
seq(5)
combn(seq(5), 3)
dim(combn(seq(5), 3))
dim(combn(amostra1, 3))
dim(combn(amostra1, 3, function(x) mean(x)))
dim(combn(amostra1, 3, function(x) mean(x[1:3,])))
dim(combn(amostra1, 3, function(x) print(x)))
dim(combn(amostra1, 3, function(x) median(x)))
dim(combn(amostra1, 3))
lapply(combn(amostra1, 3), function(x) mean(x))
unlist(lapply(combn(amostra1, 3), function(x) mean(x)))
?expand
expand(amostra1)
pop_tibble %>% summarise()
head(pop_tibble)
pop_tibble %>% summarise(n = n())
pop_tibble %>% summarise(n = mean())
pop_tibble %>% summarise(n = mean
)
pop_tibble %>% summarise(n = mean())
pop_tibble %>% summarise(n = mean(population))
unlist(lapply(combn(amostra1, 3), function(x) mean(x)))
hist(unlist(lapply(combn(amostra1, 3), function(x) mean(x))))
hist(unlist(lapply(combn(population, 3), function(x) mean(x))))
pop_n5 <- unlist(lapply(combn(population, 3), function(x) mean(x)))
pop_n5 <- unlist(lapply(combn(population, 5), function(x) mean(x)))
dim(pop_n5)
pop_n5 <- sapply(1:10, function(x) mean(sample(population, n = 5)))
?sample
pop_n5 <- sapply(1:10, function(x) mean(sample(population, size = 5)))
pop_n5
pop_n5 <- sapply(1:1000, function(x) mean(sample(population, size = 5)))
hist(pop_n5)
mean(population)
sd(population) / sqrt(5)
sd(population) / sqrt(10)
sd(population) / sqrt(100000)
pop_n5 <- as_tibble(perms = sapply(1:1000, function(x) mean(sample(population, size = 5))))
pop_n5 <- as_tibble(sapply(1:1000, function(x) mean(sample(population, size = 5))))
ggplot(data = pop_tibble) +
geom_histogram(mapping = aes(x = population))
head(pop_n5)
pop_n5 <- as_tibble(sapply(1:1000, function(x) mean(sample(population, size = 5))))
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value))
pop_n5 <- as_tibble(sapply(1:1000, function(x) mean(sample(population, size = 5))))
ggplot(data = pop_n5) +
geom_density(mapping = aes(x = value))
pop_n5 <- as_tibble(sapply(1:1000, function(x) mean(sample(population, size = 5))))
ggplot(data = pop_n5) +
geom_bar(mapping = aes(x = value))
pop_n5 <- as_tibble(sapply(1:1000, function(x) mean(sample(population, size = 5))))
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value))
pop_n5 <- as_tibble(sapply(1:1000, function(x) mean(sample(population, size = 5))))
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value), binwidth = 10)
pop_n5 <- as_tibble(sapply(1:1000, function(x) mean(sample(population, size = 5))))
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value), binwidth = 2)
pop_n5 <- as_tibble(sapply(1:1000, function(x) mean(sample(population, size = 5))))
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value), binwidth = 1)
pop_n5 <- as_tibble(sapply(1:1000, function(x) mean(sample(population, size = 5))))
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value), binwidth = 0.5)
pop_n5 <- as_tibble(sapply(1:1000, function(x) mean(sample(population, size = 5))))
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value), binwidth = 1)
pop_n5 <- as_tibble(sapply(1:10000, function(x) mean(sample(population, size = 5))))
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value), binwidth = 1)
pop_n5 %>% summarise(xmin = min(value/sqrt(5)), ymin = 0, xmax = max(value/sqrt(5)), ymax = 1000 )
d<-pop_n5 %>% summarise(xmin = min(value/sqrt(5)), ymin = 0, xmax = max(value/sqrt(5)), ymax = 1000 )
pop_n5 <- as_tibble(sapply(1:10000, function(x) mean(sample(population, size = 5))))
d<-pop_n5 %>% summarise(xmin = min(value/sqrt(5)), ymin = 0, xmax = max(value/sqrt(5)), ymax = 1000 )
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value), binwidth = 1) +
geom_rect(data = d, mapping = aes(xmin = xmin, ymin = ymin, xmax = xmax, ymax = ymax))
pop_n5 %>% summarise(xmin = min(value/sqrt(5)), ymin = 0, xmax = max(value/sqrt(5)), ymax = 1000 )
d <- pop_n5 %>% summarise(xmin = mean(value) - sd(value)/sqrt(5), ymin = 0, xmax = mean(value) + sd(value)/sqrt(5), ymax = 1000 )
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value), binwidth = 1) +
geom_rect(data = d, mapping = aes(xmin = xmin, ymin = ymin, xmax = xmax, ymax = ymax))
pop_n5 %>% summarise(xmin = mean(value) - sd(value)/sqrt(5), ymin = 0, xmax = mean(value) + sd(value)/sqrt(5), ymax = 1000 )
pop_n5 <- as_tibble(sapply(1:10000, function(x) mean(sample(population, size = 5))))
d <- pop_n5 %>% summarise(xmin = mean(value) - sd(value)/sqrt(5), ymin = 0, xmax = mean(value) + sd(value)/sqrt(5), ymax = 1000 )
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value), binwidth = 1) +
geom_rect(data = d, mapping = aes(xmin = xmin, ymin = ymin, xmax = xmax, ymax = ymax))
d
pop_n5 <- as_tibble(sapply(1:10000, function(x) mean(sample(population, size = 5))))
d <- pop_n5 %>% summarise(xmin = mean(value) - sd(value)/sqrt(5), ymin = 0, xmax = mean(value) + sd(value)/sqrt(5), ymax = 1000 )
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value), binwidth = 1) +
geom_rect(data = d, mapping = aes(xmin = xmin, ymin = ymin, xmax = xmax, ymax = ymax), alpha = 0.5, colour = "red")
pop_n5 <- as_tibble(sapply(1:10000, function(x) mean(sample(population, size = 5))))
d <- pop_n5 %>% summarise(xmin = mean(value) - sd(value)/sqrt(5), ymin = 0, xmax = mean(value) + sd(value)/sqrt(5), ymax = 1000 )
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value), binwidth = 1) +
geom_rect(data = d, mapping = aes(xmin = xmin, ymin = ymin, xmax = xmax, ymax = ymax), alpha = 0.5, colour = "red", fill = "red")
pop_n5 <- as_tibble(sapply(1:10000, function(x) mean(sample(population, size = 5))))
d <- pop_n5 %>% summarise(xmin = mean(value) - sd(value)/sqrt(5), ymin = 0, xmax = mean(value) + sd(value)/sqrt(5), ymax = 1000 )
ggplot(data = pop_n5) +
geom_histogram(mapping = aes(x = value), binwidth = 1) +
geom_rect(data = d, mapping = aes(xmin = xmin, ymin = ymin, xmax = xmax, ymax = ymax), alpha = 0.5, colour = NA, fill = "red")
slidify('index.Rmd')
Slidify('index.Rmd')
publish('rodtheo', 'slidify')
library(slidify)
publish('rodtheo', 'slidifyR')
slidify("index.Rmd")
getwd()
setwd("firstDeck/")
slidify("index.Rmd")
publish('rodtheo', 'slidifyR')
install_github('ramnathv/slidify@fix_encode')
library(devtools)
install_github('ramnathv/slidify@fix_encode')
install_github('ramnathv/slidify@fix_encode')
install_github('ramnathv/slidify@fix-encode')
